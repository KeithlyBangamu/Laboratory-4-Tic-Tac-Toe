//Tic Tac Toe is fun!//

import java.awt.*;
import java.awt.event.*;

public class tictactoe extends Frame implements ActionListener {
    private Button[][] buttons = new Button[3][3];
    private Label statusLabel = new Label("Player X's Turn");
    private boolean isXTurn = true;

    public tictactoe() {

        setTitle("Tic Tac Toe");
        setSize(400, 450);
        setLayout(new BorderLayout());

        Panel gridPanel = new Panel();
        gridPanel.setLayout(new GridLayout(3, 3));
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j] = new Button("");
                buttons[i][j].setFont(new Font("Arial", Font.BOLD, 40));
                buttons[i][j].addActionListener(this);
                gridPanel.add(buttons[i][j]);
            }
        }

        add(statusLabel, BorderLayout.NORTH);
        add(gridPanel, BorderLayout.CENTER);
        Button newGameButton = new Button("New Game");
        newGameButton.addActionListener(e -> resetGame());
        add(newGameButton, BorderLayout.SOUTH);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Button clickedButton = (Button) e.getSource();

        if (!clickedButton.getLabel().equals("")) {
            return;
        }

        clickedButton.setLabel(isXTurn ? "X" : "O");

        if (checkWinner()) {
            statusLabel.setText("Congratulations!!! Player " + (isXTurn ? "X" : "O") + " Wins!!!");
            disableButtons();
            return;
        }

        if (isDraw()) {
            statusLabel.setText("It's a Tie");
            return;
        }

        isXTurn = !isXTurn;
        statusLabel.setText("Player " + (isXTurn ? "X" : "O") + "'s Turn");
    }

    private boolean checkWinner() {
        for (int i = 0; i < 3; i++) {
            if (buttons[i][0].getLabel().equals(buttons[i][1].getLabel()) &&
                buttons[i][1].getLabel().equals(buttons[i][2].getLabel()) &&
                !buttons[i][0].getLabel().equals("")) {
                return true;
            }
            if (buttons[0][i].getLabel().equals(buttons[1][i].getLabel()) &&
                buttons[1][i].getLabel().equals(buttons[2][i].getLabel()) &&
                !buttons[0][i].getLabel().equals("")) {
                return true;
            }
        }
        if (buttons[0][0].getLabel().equals(buttons[1][1].getLabel()) &&
            buttons[1][1].getLabel().equals(buttons[2][2].getLabel()) &&
            !buttons[0][0].getLabel().equals("")) {
            return true;
        }
        if (buttons[0][2].getLabel().equals(buttons[1][1].getLabel()) &&
            buttons[1][1].getLabel().equals(buttons[2][0].getLabel()) &&
            !buttons[0][2].getLabel().equals("")) {
            return true;
        }
        return false;
    }
    private boolean isDraw() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (buttons[i][j].getLabel().equals("")) {
                    return false;
                }
            }
        }
        return true;
    }
    private void disableButtons() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j].setEnabled(false);
            }
        }
    }
    private void resetGame() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                buttons[i][j].setLabel("");
                buttons[i][j].setEnabled(true);
            }
        }
        isXTurn = true;
        statusLabel.setText("Player X's Turn");
    }
    public static void main(String[] args) {
        new tictactoe();
    }
}
